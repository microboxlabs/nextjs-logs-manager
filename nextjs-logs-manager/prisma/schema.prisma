datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  role          String @default("user")
  // el campo password opcional es en caso de querer usar
  // autenticacion con otros proveedores como google, github, etc.
  password      String?
  image         String?
  accounts      Account[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}
  
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
}

model LogEntry {
  id        String   @id @default(uuid())
  timestamp DateTime
  level     String   // Ser√° "INFO", "WARNING" o "ERROR"
  service   String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([timestamp])
  @@index([level])
  @@index([service])
}